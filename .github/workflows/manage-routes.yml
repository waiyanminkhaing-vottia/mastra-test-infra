name: Manage Nginx Routes

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'list'
        type: choice
        options:
        - list
        - add
        - remove
        - update
        - reload
      route_name:
        description: 'Route name (for add/remove/update operations)'
        required: false
        type: string
      route_path:
        description: 'Route path (e.g., /api, /sanden)'
        required: false
        type: string
      target_port:
        description: 'Target port (e.g., 3000, 3001)'
        required: false
        type: string
      route_type:
        description: 'Route type'
        required: false
        default: 'proxy'
        type: choice
        options:
        - proxy
        - static
        - redirect
        - health

env:
  ROUTES_FILE: 'nginx-routes.json'

jobs:
  manage-routes:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'ap-northeast-1' }}

    - name: Get instance details
      id: instance
      run: |
        echo "Setting up connection details..."

        # Get host from Terraform variables (same as deploy.yml)
        LIGHTSAIL_HOST=$(grep 'default.*=' terraform/variables.tf | grep 'test.dev-maestra.vottia.me' | sed 's/.*"\(.*\)".*/\1/')
        LIGHTSAIL_USER="ec2-user"

        if [ -z "$LIGHTSAIL_HOST" ]; then
          echo "ERROR: Could not extract host from terraform/variables.tf"
          exit 1
        fi

        echo "Host: $LIGHTSAIL_HOST"
        echo "User: $LIGHTSAIL_USER"

        echo "instance_ip=$LIGHTSAIL_HOST" >> $GITHUB_OUTPUT
        echo "instance_user=$LIGHTSAIL_USER" >> $GITHUB_OUTPUT

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ steps.instance.outputs.instance_ip }} >> ~/.ssh/known_hosts

        # Test SSH connection
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }} "echo 'SSH connection successful for route management'"

    - name: Initialize routes file if not exists
      run: |
        if [ ! -f "${{ env.ROUTES_FILE }}" ]; then
          echo "Creating initial routes configuration file..."
          python3 -c "import json; import os; from datetime import datetime; routes_file = os.environ.get('ROUTES_FILE', 'nginx-routes.json'); config = {'routes': [], 'last_updated': datetime.utcnow().isoformat() + 'Z', 'version': '1.0', 'description': 'Dynamic nginx route configuration for Mastra infrastructure'}; f = open(routes_file, 'w'); json.dump(config, f, indent=2); f.close(); print(f'Initial routes configuration created: {routes_file}')"
        fi
      env:
        ROUTES_FILE: ${{ env.ROUTES_FILE }}

    - name: List current routes
      if: github.event.inputs.action == 'list'
      run: |
        echo "## Current Nginx Routes" >> $GITHUB_STEP_SUMMARY

        if [ -f "${{ env.ROUTES_FILE }}" ]; then
          echo "### Local Configuration:" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat ${{ env.ROUTES_FILE }} >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "No local routes configuration found." >> $GITHUB_STEP_SUMMARY
        fi

        echo "### Live Server Configuration:" >> $GITHUB_STEP_SUMMARY
        echo '```nginx' >> $GITHUB_STEP_SUMMARY
        ssh -o ConnectTimeout=10 ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }} "if [ -f /etc/nginx/conf.d/dynamic-routes.conf ]; then cat /etc/nginx/conf.d/dynamic-routes.conf; else echo 'No nginx configuration found on server'; fi" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

    - name: Add route
      if: github.event.inputs.action == 'add'
      run: |
        if [ -z "${{ github.event.inputs.route_name }}" ] || [ -z "${{ github.event.inputs.route_path }}" ]; then
          echo "ERROR: route_name and route_path are required for add operation"
          exit 1
        fi

        # Add route to JSON configuration
        echo "aW1wb3J0IGpzb24KaW1wb3J0IHN5cwppbXBvcnQgb3MKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKCnJvdXRlX25hbWUgPSBvcy5lbnZpcm9uLmdldCgiUk9VVEVfTkFNRSIsICIiKQpyb3V0ZV9wYXRoID0gb3MuZW52aXJvbi5nZXQoIlJPVVRFX1BBVEgiLCAiIikKcm91dGVfdHlwZSA9IG9zLmVudmlyb24uZ2V0KCJST1VURV9UWVBFIiwgInByb3h5IikKdGFyZ2V0X3BvcnQgPSBvcy5lbnZpcm9uLmdldCgiVEFSR0VUX1BPUlQiLCAiMzAwMCIpCgpyb3V0ZXNfZmlsZSA9IG9zLmVudmlyb24uZ2V0KCJST1VURVNfRklMRSIsICJuZ2lueC1yb3V0ZXMuanNvbiIpCnRyeToKICAgIHdpdGggb3Blbihyb3V0ZXNfZmlsZSwgInIiKSBhcyBmOgogICAgICAgIGNvbmZpZyA9IGpzb24ubG9hZChmKQpleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAgICBjb25maWcgPSB7InJvdXRlcyI6IFtdLCAidmVyc2lvbiI6ICIxLjAifQoKZm9yIHJvdXRlIGluIGNvbmZpZ1sicm91dGVzIl06CiAgICBpZiByb3V0ZVsibmFtZSJdID09IHJvdXRlX25hbWU6CiAgICAgICAgcHJpbnQoZiJFUlJPUjogUm91dGUge3JvdXRlX25hbWV9IGFscmVhZHkgZXhpc3RzIikKICAgICAgICBzeXMuZXhpdCgxKQoKbmV3X3JvdXRlID0gewogICAgIm5hbWUiOiByb3V0ZV9uYW1lLAogICAgInBhdGgiOiByb3V0ZV9wYXRoLAogICAgInR5cGUiOiByb3V0ZV90eXBlLAogICAgInRhcmdldF9wb3J0IjogdGFyZ2V0X3BvcnQsCiAgICAiY3JlYXRlZCI6IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCgpICsgIloiCn0KCmNvbmZpZ1sicm91dGVzIl0uYXBwZW5kKG5ld19yb3V0ZSkKY29uZmlnWyJsYXN0X3VwZGF0ZWQiXSA9IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCgpICsgIloiCgp3aXRoIG9wZW4ocm91dGVzX2ZpbGUsICJ3IikgYXMgZjoKICAgIGpzb24uZHVtcChjb25maWcsIGYsIGluZGVudD0yKQoKcHJpbnQoZiJBZGRlZCByb3V0ZToge25ld19yb3V0ZX0iKQ==" | base64 -d > add_route.py
        python3 add_route.py
      env:
        ROUTE_NAME: ${{ github.event.inputs.route_name }}
        ROUTE_PATH: ${{ github.event.inputs.route_path }}
        ROUTE_TYPE: ${{ github.event.inputs.route_type || 'proxy' }}
        TARGET_PORT: ${{ github.event.inputs.target_port || '3000' }}
        ROUTES_FILE: ${{ env.ROUTES_FILE }}

    - name: Remove route
      if: github.event.inputs.action == 'remove'
      run: |
        if [ -z "${{ github.event.inputs.route_name }}" ]; then
          echo "ERROR: route_name is required for remove operation"
          exit 1
        fi

        # Remove route from JSON configuration
        echo "aW1wb3J0IGpzb24KaW1wb3J0IHN5cwppbXBvcnQgb3MKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKCnJvdXRlX25hbWUgPSBvcy5lbnZpcm9uLmdldCgiUk9VVEVfTkFNRSIsICIiKQoKcm91dGVzX2ZpbGUgPSBvcy5lbnZpcm9uLmdldCgiUk9VVEVTX0ZJTEUiLCAibmdpbngtcm91dGVzLmpzb24iKQp0cnk6CiAgICB3aXRoIG9wZW4ocm91dGVzX2ZpbGUsICJyIikgYXMgZjoKICAgICAgICBjb25maWcgPSBqc29uLmxvYWQoZikKZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOgogICAgcHJpbnQoIkVSUk9SOiBObyByb3V0ZXMgY29uZmlndXJhdGlvbiBmb3VuZCIpCiAgICBzeXMuZXhpdCgxKQoKaW5pdGlhbF9jb3VudCA9IGxlbihjb25maWdbInJvdXRlcyJdKQpjb25maWdbInJvdXRlcyJdID0gW3IgZm9yIHIgaW4gY29uZmlnWyJyb3V0ZXMiXSBpZiByWyJuYW1lIl0gIT0gcm91dGVfbmFtZV0KCmlmIGxlbihjb25maWdbInJvdXRlcyJdKSA9PSBpbml0aWFsX2NvdW50OgogICAgcHJpbnQoZiJFUlJPUjogUm91dGUge3JvdXRlX25hbWV9IG5vdCBmb3VuZCIpCiAgICBzeXMuZXhpdCgxKQoKY29uZmlnWyJsYXN0X3VwZGF0ZWQiXSA9IGRhdGV0aW1lLnV0Y25vdygpLmlzb2Zvcm1hdCgpICsgIloiCgp3aXRoIG9wZW4ocm91dGVzX2ZpbGUsICJ3IikgYXMgZjoKICAgIGpzb24uZHVtcChjb25maWcsIGYsIGluZGVudD0yKQoKcHJpbnQoZiJSZW1vdmVkIHJvdXRlOiB7cm91dGVfbmFtZX0iKQ==" | base64 -d > remove_route.py
        python3 remove_route.py
      env:
        ROUTE_NAME: ${{ github.event.inputs.route_name }}
        ROUTES_FILE: ${{ env.ROUTES_FILE }}

    - name: Generate nginx configuration
      if: github.event.inputs.action == 'add' || github.event.inputs.action == 'remove' || github.event.inputs.action == 'update' || github.event.inputs.action == 'reload'
      run: |
        # Generate nginx config from routes JSON
        echo "aW1wb3J0IGpzb24KaW1wb3J0IG9zCgpyb3V0ZXNfZmlsZSA9IG9zLmVudmlyb24uZ2V0KCJST1VURVNfRklMRSIsICJuZ2lueC1yb3V0ZXMuanNvbiIpCnRyeToKICAgIHdpdGggb3Blbihyb3V0ZXNfZmlsZSwgInIiKSBhcyBmOgogICAgICAgIGNvbmZpZyA9IGpzb24ubG9hZChmKQpleGNlcHQgRmlsZU5vdEZvdW5kRXJyb3I6CiAgICBjb25maWcgPSB7InJvdXRlcyI6IFtdfQoKbmdpbnhfY29uZmlnID0gIiIic2VydmVyIHsKICAgIGxpc3RlbiA4MCBkZWZhdWx0X3NlcnZlcjsKICAgIHNlcnZlcl9uYW1lIF87CgogICAgIyBTZWN1cml0eSBoZWFkZXJzCiAgICBhZGRfaGVhZGVyIFgtRnJhbWUtT3B0aW9ucyAiU0FNRU9SSUdJTiIgYWx3YXlzOwogICAgYWRkX2hlYWRlciBYLUNvbnRlbnQtVHlwZS1PcHRpb25zICJub3NuaWZmIiBhbHdheXM7CiAgICBhZGRfaGVhZGVyIFgtWFNTLVByb3RlY3Rpb24gIjE7IG1vZGU9YmxvY2siIGFsd2F5czsKCiAgICBjbGllbnRfbWF4X2JvZHlfc2l6ZSAxME07CiIiIgoKZm9yIHJvdXRlIGluIGNvbmZpZ1sicm91dGVzIl06CiAgICBpZiByb3V0ZVsidHlwZSJdID09ICJwcm94eSI6CiAgICAgICAgIyBVc2UgJXMgZm9ybWF0dGluZyB0byBhdm9pZCBpc3N1ZXMgd2l0aCAkIGNoYXJhY3RlcnMKICAgICAgICBwcm94eV9ibG9jayA9ICIiIgogICAgIyBSb3V0ZSAlcyAtICVzCiAgICBsb2NhdGlvbiAlcyB7CiAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vMTI3LjAuMC4xOiVzOwogICAgICAgIHByb3h5X2h0dHBfdmVyc2lvbiAxLjE7CiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBVcGdyYWRlICRodHRwX3VwZ3JhZGU7CiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBDb25uZWN0aW9uICd1cGdyYWRlJzsKICAgICAgICBwcm94eV9zZXRfaGVhZGVyIEhvc3QgJGhvc3Q7CiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBYLVJlYWwtSVAgJHJlbW90ZV9hZGRyOwogICAgICAgIHByb3h5X3NldF9oZWFkZXIgWC1Gb3J3YXJkZWQtRm9yICRwcm94eV9hZGRfeF9mb3J3YXJkZWRfZm9yOwogICAgICAgIHByb3h5X3NldF9oZWFkZXIgWC1Gb3J3YXJkZWQtUHJvdG8gJHNjaGVtZTsKICAgICAgICBwcm94eV9jYWNoZV9ieXBhc3MgJGh0dHBfdXBncmFkZTsKICAgIH0iIiIgJSAocm91dGVbIm5hbWUiXSwgcm91dGVbInBhdGgiXSwgcm91dGVbInBhdGgiXSwgcm91dGVbInRhcmdldF9wb3J0Il0pCiAgICAgICAgbmdpbnhfY29uZmlnICs9IHByb3h5X2Jsb2NrCiAgICBlbGlmIHJvdXRlWyJ0eXBlIl0gPT0gImhlYWx0aCI6CiAgICAgICAgaGVhbHRoX2Jsb2NrID0gIiIiCiAgICAjIEhlYWx0aCBjaGVjayAtICVzCiAgICBsb2NhdGlvbiAlcyB7CiAgICAgICAgYWNjZXNzX2xvZyBvZmY7CiAgICAgICAgcmV0dXJuIDIwMCAiaGVhbHRoeVxcbiI7CiAgICAgICAgYWRkX2hlYWRlciBDb250ZW50LVR5cGUgdGV4dC9wbGFpbjsKICAgIH0iIiIgJSAocm91dGVbIm5hbWUiXSwgcm91dGVbInBhdGgiXSkKICAgICAgICBuZ2lueF9jb25maWcgKz0gaGVhbHRoX2Jsb2NrCiAgICBlbGlmIHJvdXRlWyJ0eXBlIl0gPT0gInJlZGlyZWN0IjoKICAgICAgICByZWRpcmVjdF91cmwgPSByb3V0ZS5nZXQoInJlZGlyZWN0X3VybCIsICIvIikKICAgICAgICByZWRpcmVjdF9ibG9jayA9ICIiIgogICAgIyBSZWRpcmVjdCAtICVzCiAgICBsb2NhdGlvbiAlcyB7CiAgICAgICAgcmV0dXJuIDMwMSAlczsKICAgIH0iIiIgJSAocm91dGVbIm5hbWUiXSwgcm91dGVbInBhdGgiXSwgcmVkaXJlY3RfdXJsKQogICAgICAgIG5naW54X2NvbmZpZyArPSByZWRpcmVjdF9ibG9jawoKbmdpbnhfY29uZmlnICs9ICIiIgp9IiIiCgp3aXRoIG9wZW4oIm5naW54LmNvbmYiLCAidyIpIGFzIGY6CiAgICBmLndyaXRlKG5naW54X2NvbmZpZykKCnByaW50KCJHZW5lcmF0ZWQgbmdpbnggY29uZmlndXJhdGlvbjoiKQpwcmludChuZ2lueF9jb25maWcpCg==" | base64 -d > generate_nginx.py
        python3 generate_nginx.py
      env:
        ROUTES_FILE: ${{ env.ROUTES_FILE }}

    - name: Deploy nginx configuration
      if: github.event.inputs.action == 'add' || github.event.inputs.action == 'remove' || github.event.inputs.action == 'update' || github.event.inputs.action == 'reload'
      run: |
        echo "Deploying nginx configuration to server..."

        # Copy nginx config to server
        scp -o ConnectTimeout=10 nginx.conf ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }}:/tmp/

        # Deploy and reload nginx
        echo "IyEvYmluL2Jhc2gKc2V0IC1lCiMgQmFja3VwIGN1cnJlbnQgY29uZmlnCnN1ZG8gY3AgL2V0Yy9uZ2lueC9jb25mLmQvZHluYW1pYy1yb3V0ZXMuY29uZiAvZXRjL25naW54L2NvbmYuZC9keW5hbWljLXJvdXRlcy5jb25mLmJhY2t1cC4kKGRhdGUgKyVzKSAyPi9kZXYvbnVsbCB8fCB0cnVlCgojIERlcGxveSBuZXcgY29uZmlnCnN1ZG8gY3AgL3RtcC9uZ2lueC5jb25mIC9ldGMvbmdpbngvY29uZi5kL2R5bmFtaWMtcm91dGVzLmNvbmYKCiMgVGVzdCBuZ2lueCBjb25maWd1cmF0aW9uCmlmIHN1ZG8gbmdpbnggLXQ7IHRoZW4KICBlY2hvICLinIUgTmdpbnggY29uZmlndXJhdGlvbiB0ZXN0IHBhc3NlZCIKICAjIFJlbG9hZCBuZ2lueAogIHN1ZG8gc3lzdGVtY3RsIHJlbG9hZCBuZ2lueAogIGVjaG8gIuKchSBOZ2lueCByZWxvYWRlZCBzdWNjZXNzZnVsbHkiCmVsc2UKICBlY2hvICLinYwgTmdpbnggY29uZmlndXJhdGlvbiB0ZXN0IGZhaWxlZCIKICAjIFJlc3RvcmUgYmFja3VwIGlmIGl0IGV4aXN0cwogIHN1ZG8gY3AgL2V0Yy9uZ2lueC9jb25mLmQvZHluYW1pYy1yb3V0ZXMuY29uZi5iYWNrdXAuJChscyAtdCAvZXRjL25naW54L2NvbmYuZC9keW5hbWljLXJvdXRlcy5jb25mLmJhY2t1cC4qIDI+L2Rldi9udWxsIHwgaGVhZCAtMSB8IGN1dCAtZC4gLWY0KSAvZXRjL25naW54L2NvbmYuZC9keW5hbWljLXJvdXRlcy5jb25mIDI+L2Rldi9udWxsIHx8IHRydWUKICBleGl0IDEKZmkK" | base64 -d > deploy_nginx.sh
        chmod +x deploy_nginx.sh
        scp -o ConnectTimeout=10 deploy_nginx.sh ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }}:/tmp/
        ssh -o ConnectTimeout=10 ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }} "chmod +x /tmp/deploy_nginx.sh && /tmp/deploy_nginx.sh"

    - name: Verify deployment
      if: github.event.inputs.action == 'add' || github.event.inputs.action == 'remove' || github.event.inputs.action == 'update' || github.event.inputs.action == 'reload'
      run: |
        echo "Verifying nginx deployment..."

        echo "IyEvYmluL2Jhc2gKc2V0IC1lCiMgQ2hlY2sgbmdpbnggc3RhdHVzCmlmIHN1ZG8gc3lzdGVtY3RsIGlzLWFjdGl2ZSBuZ2lueCA+L2Rldi9udWxsOyB0aGVuCiAgZWNobyAi4pyFIE5naW54IHNlcnZpY2UgaXMgYWN0aXZlIgplbHNlCiAgZWNobyAi4p2MIE5naW54IHNlcnZpY2UgaXMgbm90IGFjdGl2ZSIKICBleGl0IDEKZmkKCiMgVGVzdCBiYXNpYyBjb25uZWN0aXZpdHkKaWYgY3VybCAtcyAtLWNvbm5lY3QtdGltZW91dCA1IC1vIC9kZXYvbnVsbCAtdyAiJXtodHRwX2NvZGV9IiBsb2NhbGhvc3QgfCBncmVwIC1xICIyMDBcfDQwNFx8MzAxXHwzMDIiOyB0aGVuCiAgZWNobyAi4pyFIE5naW54IGlzIHJlc3BvbmRpbmciCmVsc2UKICBlY2hvICLinYwgTmdpbnggbm90IHJlc3BvbmRpbmciCiAgZXhpdCAxCmZpCg==" | base64 -d > verify_nginx.sh
        chmod +x verify_nginx.sh
        scp -o ConnectTimeout=10 verify_nginx.sh ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }}:/tmp/
        ssh -o ConnectTimeout=10 ${{ steps.instance.outputs.instance_user }}@${{ steps.instance.outputs.instance_ip }} "chmod +x /tmp/verify_nginx.sh && /tmp/verify_nginx.sh"

    - name: Commit route changes
      if: github.event.inputs.action == 'add' || github.event.inputs.action == 'remove' || github.event.inputs.action == 'update'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        if git diff --quiet ${{ env.ROUTES_FILE }}; then
          echo "No changes to commit"
        else
          git add ${{ env.ROUTES_FILE }}
          git commit -m "🔄 ${{ github.event.inputs.action }} nginx route: ${{ github.event.inputs.route_name || 'bulk operation' }}"
          git push
          echo "✅ Route configuration changes committed"
        fi

    - name: Summary
      run: |
        echo "## Route Management Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Action**: ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Route Name**: ${{ github.event.inputs.route_name || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Route Path**: ${{ github.event.inputs.route_path || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Target Port**: ${{ github.event.inputs.target_port || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Route Type**: ${{ github.event.inputs.route_type || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Completed successfully" >> $GITHUB_STEP_SUMMARY

        if [ -f "${{ env.ROUTES_FILE }}" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Updated Routes Configuration:" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat ${{ env.ROUTES_FILE }} >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi