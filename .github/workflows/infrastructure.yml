name: Manage Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: '1.7.0'

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'ap-northeast-1' }}

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Terraform Plan
      id: plan
      run: |
        cd terraform
        terraform plan -out=tfplan
      continue-on-error: true
      env:
        TF_IN_AUTOMATION: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: |
        cd terraform
        terraform apply -auto-approve tfplan
      env:
        TF_IN_AUTOMATION: true

    - name: List Resources to be Destroyed
      if: github.event.inputs.action == 'destroy'
      run: |
        cd terraform
        echo "## 🗑️  Resources to be Destroyed" >> $GITHUB_STEP_SUMMARY
        echo "The following resources will be permanently deleted:" >> $GITHUB_STEP_SUMMARY
        terraform plan -destroy -no-color | grep -E "# .* will be destroyed" | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY || echo "- Unable to list resources (they may already be destroyed)" >> $GITHUB_STEP_SUMMARY

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: |
        cd terraform
        echo "🗑️  Starting resource destruction..."
        terraform destroy -auto-approve

        # Verify destruction
        if terraform show -json | jq -e '.values.root_module.resources | length == 0' >/dev/null 2>&1; then
          echo "✅ All resources successfully destroyed"
          echo "## ✅ Destruction Complete" >> $GITHUB_STEP_SUMMARY
          echo "All infrastructure resources have been successfully destroyed." >> $GITHUB_STEP_SUMMARY
          echo "Your AWS account will no longer be charged for these resources." >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️  Some resources may still exist"
          echo "## ⚠️  Destruction Warning" >> $GITHUB_STEP_SUMMARY
          echo "Some resources may still exist. Please check your AWS console." >> $GITHUB_STEP_SUMMARY
        fi
      env:
        TF_IN_AUTOMATION: true

    - name: Output Instance Info
      if: github.event.inputs.action == 'apply'
      run: |
        cd terraform
        echo "## Infrastructure Outputs" >> $GITHUB_STEP_SUMMARY
        terraform output -json | jq -r 'to_entries[] | "- **\(.key)**: \(.value.value)"' >> $GITHUB_STEP_SUMMARY


    - name: Display Connection Info
      if: github.event.inputs.action == 'apply'
      run: |
        cd terraform
        INSTANCE_IP=$(terraform output -raw instance_public_ip)
        DOMAIN=$(terraform output -json dns_configuration | jq -r '.domain')

        echo "::notice title=Instance IP::Instance IP is $INSTANCE_IP"
        echo "🚀 Infrastructure deployed successfully!"
        echo "✅ Infrastructure configured - no manual secrets needed"
        # Get nameservers for setup instructions
        NAMESERVERS=$(terraform output -json route53_info | jq -r '.name_servers | join(", ")')

        echo "📋 Next steps:"
        echo "1. Configure nameservers at your domain registrar:"
        echo "   $NAMESERVERS"
        echo "2. Wait for DNS propagation (5-30 minutes)"
        echo "3. Run 'Deploy to Lightsail' workflow to deploy applications"
        echo "4. Access your applications at http://$DOMAIN"
        echo ""
        echo "💡 To delete all resources later, run this workflow with action: 'destroy'"